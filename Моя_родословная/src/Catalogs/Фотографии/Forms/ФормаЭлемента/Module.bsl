
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПрочитатьФотографию();
	
КонецПроцедуры

Процедура ПрочитатьФотографию()
	
	КаталогФотографий = Константы.ПутьККаталогуСФотографиями.Получить();
	
	Если Не Объект.Ссылка.Пустая() Тогда
		
		УИД = Строка(Объект.Ссылка.УникальныйИдентификатор());
	
		ФайлыФотографий = НайтиФайлы(КаталогФотографий, "*" + УИД + "*", Истина);
		
		Для Каждого Файл Из ФайлыФотографий Цикл
			
			Если СтрНайти(Файл.Имя, УИД) > 0 Тогда
				
				АдресФотографии = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(Файл.ПолноеИмя));
				Прервать;
				
			КонецЕсли;	
			
		КонецЦикла;	
		
	КонецЕсли;	 
	
	
КонецПроцедуры

&НаКлиенте
Процедура ФотографияНажатие(Элемент, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		//Записать();	
		
		ПоказатьПредупреждение(, "Сначала сохраните элемент фотографии!");
		Возврат;
					
	КонецЕсли;	
	
	//ОООтветЗаменаФотографии = Новый ОписаниеОповещения("ОтветЗаменаФотографии");
	
	//Если Не ПустаяСтрока(ПутьКФотографии) Тогда
	//	
	//	ПоказатьВопрос(ОООтветЗаменаФотографии, "Заменить фотографию?", РежимДиалогаВопрос.ДаНет);
	//	Возврат;
	//	
	//КонецЕсли;	
	
	// надо еще проверять запись файла
	// TODO Если фотография задана - переспрашивать
	// сделать фильтр по файлам фотографии
	
	//Если Объект.Ссылка.Пустая() Тогда
		
	//	Записать();
		
	//КонецЕсли;
	
	Если ПустаяСтрока(АдресФотографии) Тогда //добавляем фотографию
	
		НачатьВыборФотографии();		
	
	Иначе //фотография уже есть, предлагаем либо заменить фотографи, либо удалить её
	
		СписокВыбора = Новый СписокЗначений;
		СписокВыбора.Добавить("Заменить фотографию");
		СписокВыбора.Добавить("Удалить фотографию");
		СписокВыбора.Добавить("Отмена");
		
		ООЗавершениеВыбораВариантаРаботыСФотографией = Новый ОписаниеОповещения("ЗавершениеВыбораВариантаРаботыСФотографией", ЭтаФорма);
		ПоказатьВыборИзМеню(ООЗавершениеВыбораВариантаРаботыСФотографией, СписокВыбора);
		
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;	
	
	//СтандартнаяОбработка = Ложь;
	//ООЗавершениеВыбораФотографии = Новый ОписаниеОповещения("ЗавершениеВыбораФотографии", ЭтаФорма);
	//НачатьПомещениеФайла(ООЗавершениеВыбораФотографии, АдресФотографии, , );
	//НачатьПомещениеФайлов(, , , , );
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьВыборФотографии()
	
	ООЗавершениеВыбораФотографии = Новый ОписаниеОповещения("ЗавершениеВыбораФотографии", ЭтаФорма);
	НачатьПомещениеФайла(ООЗавершениеВыбораФотографии, , , Истина, ЭтаФорма.УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершениеВыбораФотографии(Результат, АдресФайла, ИмяФайла, ДополнительныеПараметры) Экспорт
	
	Если Результат = Истина Тогда
		
		АдресФотографии = АдресФайла;
		Модифицированность = Истина;
		ПутьКФотографии = ИмяФайла;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершениеВыбораВариантаРаботыСФотографией(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
	
		Если ВыбранныйЭлемент.Значение = "Заменить фотографию" Тогда
			
			НачатьВыборФотографии();
			
		ИначеЕсли (ВыбранныйЭлемент.Значение = "Удалить фотографию") Тогда
			 
			АдресФотографии = "";
			ПутьКФотографии = "";
			Модифицированность = Истина;
			
		КонецЕсли;	
		
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если Не ПустаяСтрока(ПутьКФотографии) Тогда
		
		УИДФото = Строка(Объект.Ссылка.УникальныйИдентификатор());
		Файл = Новый Файл(ПутьКФотографии);
		
		Если Файл.Существует() Тогда

			НовыйПутьКФотографии = СтрЗаменить(ПутьКФотографии, Файл.ИмяБезРасширения, Файл.ИмяБезРасширения + "' uuid=" + УИДФото + "'");
			ПереместитьФайл(ПутьКФотографии, НовыйПутьКФотографии);
			
		Иначе
			ПоказатьПредупреждение(, "Файл фотографии был переименован или перемещён!");	
		КонецЕсли;	
		
		
	КонецЕсли;	
	
КонецПроцедуры
	


	
